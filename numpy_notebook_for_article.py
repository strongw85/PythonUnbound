# -*- coding: utf-8 -*-
"""NumPy - Notebook for Article

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XmR78opgd4DSizRcygKIdP56vJQIEtej

# Imports
"""

import numpy as np
from PIL import Image
import matplotlib.pyplot as plt

"""# Python List"""

list = ['put', 'stuff', 'here']
print(list)

"""# NumPy Array"""

test_array = np.array([['if', 'you', 'put'], ['stuff', 'here', 'it'], ['shows', 'up', 'here']])
print(test_array)

"""## Slicing a NumPy Array using Indexing"""

test_slice = test_array[:,0:1] # Select all data in column 1
print(test_slice)

test_slice = test_array[0:1] # Select all data in row 1
print(test_slice)

test_slice = test_array[0:2,2:3] # Select all data starting in rows 1 and 2, but only the last column
print(test_slice)

test_slice = test_array[:,:] # Select Everything 
test_slice = test_array[:,0:1] # Select all data in column 1 
test_slice = test_array[0:1] # Select all data in row 1 
test_slice = test_array[0:2,2:3] # Select all data starting in rows 1 and 2, 
                                            # but only the last column

# Matrix
test_matrix = np.matrix(test_array)
print(test_matrix)

# Vector
test_vector = test_array[1:2] # Select all data in row 2
print(test_vector)

# example = test_array.astype('int64')
# print(example)

to_int = np.array([['1', '2', '3'], ['4', '5', '6'], ['7', '8', '9']])
print(to_int)
print()
to_int = to_int.astype('int64')
print(to_int)

# from https://jakevdp.github.io/PythonDataScienceHandbook/02.09-structured-data-numpy.html

name = ['Alice', 'Bob', 'Cathy', 'Doug']
age = [25, 45, 37, 19]
weight = [55.0, 85.5, 68.0, 61.5]

x = np.zeros(4, dtype=int)

# Use a compound data type for structured arrays
data = np.zeros(4, dtype={'names':('name', 'age', 'weight'),
                          'formats':('U10', 'i4', 'f8')})
print(data.dtype)

data['name'] = name
data['age'] = age
data['weight'] = weight
print(data)

# Get all names
data['name']

array_to_invert = np.array([[5,7,1,6], [12,18,6,4], [9, 3, 21, 5], [15, 8, 3, 2]])

inverted_array = array_to_invert *-1

print(inverted_array)

from numpy.linalg import inv

array_to_invert = np.array([[5,7,1,6], [12,18,6,4], [9, 3, 21, 5], [15, 8, 3, 2]])
print(array_to_invert)

to_int_inv = inv(array_to_invert)

print(to_int_inv)

identity_matrix = np.dot(array_to_invert, to_int_inv)

print(identity_matrix)

"""# NumPY and PIL"""

image = Image.open('/content/drive/MyDrive/Data Business/Blog/Notebooks for Articles/Datasets/Male-Face-Transparent.png')
array = np.array(image)

array = array / 255
print(array)


plt.imshow(array, cmap='gray')
plt.colorbar()

